/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  SplitSender,
  SplitSenderInterface,
} from "../../../contracts/splitContract/SplitSender";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "AddressEmptyCode",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "AddressInsufficientBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "FailedInnerCall",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidInitialization",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitializing",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "SafeERC20FailedOperation",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "ERC20Withdrawal",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "version",
        type: "uint64",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "shares",
        type: "uint256",
      },
    ],
    name: "PayeeAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdrawal",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "withdrawETH",
        type: "bool",
      },
      {
        internalType: "contract IERC20[]",
        name: "tokens",
        type: "address[]",
      },
    ],
    name: "batchWithdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "withdrawETH",
        type: "bool",
      },
      {
        internalType: "contract IERC20[]",
        name: "tokens",
        type: "address[]",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "batchWithdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getPending",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getPending",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "payee",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "payeeCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "shares",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalShares",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
    ],
    name: "totalWithdrawn",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalWithdrawn",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "account",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "withdrawn",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "withdrawn",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610f1c806100206000396000f3fe6080604052600436106100e05760003560e01c80638b83209b1161007f578063ce7c2ac211610059578063ce7c2ac2146102a2578063d086c254146102d8578063dad13219146102f8578063f940e3851461033e57600080fd5b80638b83209b1461022a578063b9ef972d14610262578063cb6d0b471461028257600080fd5b80633a98ef39116100bb5780633a98ef39146101a85780634b319713146101bd57806351cff8d9146101d25780636ef61092146101f457600080fd5b8062dbe1091461012e5780630a64143a1461015257806314820f2f1461018857600080fd5b36610129577fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c33604080516001600160a01b0390921682523460208301520160405180910390a1005b600080fd5b34801561013a57600080fd5b506002545b6040519081526020015b60405180910390f35b34801561015e57600080fd5b5061013f61016d366004610bb7565b6001600160a01b031660009081526037602052604090205490565b34801561019457600080fd5b5061013f6101a3366004610bd4565b61035e565b3480156101b457600080fd5b5060005461013f565b3480156101c957600080fd5b5060355461013f565b3480156101de57600080fd5b506101f26101ed366004610bb7565b610449565b005b34801561020057600080fd5b5061013f61020f366004610bb7565b6001600160a01b031660009081526036602052604090205490565b34801561023657600080fd5b5061024a610245366004610c0d565b610469565b6040516001600160a01b039091168152602001610149565b34801561026e57600080fd5b506101f261027d366004610d0a565b610499565b34801561028e57600080fd5b506101f261029d366004610d5a565b6104d6565b3480156102ae57600080fd5b5061013f6102bd366004610bb7565b6001600160a01b031660009081526001602052604090205490565b3480156102e457600080fd5b5061013f6102f3366004610bb7565b610542565b34801561030457600080fd5b5061013f610313366004610bd4565b6001600160a01b03918216600090815260386020908152604080832093909416825291909152205490565b34801561034a57600080fd5b506101f2610359366004610bd4565b610585565b6001600160a01b03821660009081526037602052604081205481906040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526001600160a01b038616906370a0823190602401602060405180830381865afa1580156103d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103fa9190610dbe565b6104049190610ded565b6001600160a01b0380861660009081526038602090815260408083209388168352929052205490915061043f90849083906105a8565b6105a8565b9150505b92915050565b80610453816105eb565b6104658261046084610542565b61067e565b5050565b60006002828154811061047e5761047e610e00565b6000918252602090912001546001600160a01b031692915050565b336104a3816105eb565b60005b6002548110156104d0576104be848461029d84610469565b806104c881610e16565b9150506104a6565b50505050565b336104e0816105eb565b816104ea816105eb565b84156104f9576104f983610449565b60005b845181101561053a5761052885828151811061051a5761051a610e00565b602002602001015185610585565b8061053281610e16565b9150506104fc565b505050505050565b60008061054e60355490565b6105589047610ded565b905061057e838261043a866001600160a01b031660009081526036602052604090205490565b9392505050565b8061058f816105eb565b6105a3838361059e868661035e565b610779565b505050565b600080546001600160a01b0385168252600160205260408220548391906105cf9086610e4e565b6105d99190610e65565b6105e39190610e87565b949350505050565b6001600160a01b03811660009081526001602052604090205461067b5760405162461bcd60e51b815260206004820152602360248201527f50617965654d616e616765723a206163636f756e7420686173206e6f2073686160448201527f726573000000000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b50565b806000036106f45760405162461bcd60e51b815260206004820152602b60248201527f57697468647261774d616e616765723a206163636f756e74206973206e6f742060448201527f647565207061796d656e740000000000000000000000000000000000000000006064820152608401610672565b80603560008282546107069190610ded565b90915550506001600160a01b0382166000908152603660205260409020805482019055610733828261089d565b604080516001600160a01b0384168152602081018390527f7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b65910160405180910390a15050565b806000036107ef5760405162461bcd60e51b815260206004820152602b60248201527f57697468647261774d616e616765723a206163636f756e74206973206e6f742060448201527f647565207061796d656e740000000000000000000000000000000000000000006064820152608401610672565b6001600160a01b03831660009081526037602052604081208054839290610817908490610ded565b90915550506001600160a01b038084166000908152603860209081526040808320938616835292905220805482019055610852838383610966565b604080516001600160a01b038481168252602082018490528516917f2fbb3e8dc2807d6a61feb98fc2120153f77b2c0d25ef6272e1756935dd62c847910160405180910390a2505050565b804710156108d9576040517fcd786059000000000000000000000000000000000000000000000000000000008152306004820152602401610672565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114610926576040519150601f19603f3d011682016040523d82523d6000602084013e61092b565b606091505b50509050806105a3576040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b604080516001600160a01b03848116602483015260448083018590528351808403909101815260649092019092526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb000000000000000000000000000000000000000000000000000000001790526105a3918591906000906109f290841683610a59565b90508051600014158015610a17575080806020019051810190610a159190610e9a565b155b156105a3576040517f5274afe70000000000000000000000000000000000000000000000000000000081526001600160a01b0384166004820152602401610672565b606061057e8383600084600080856001600160a01b03168486604051610a7f9190610eb7565b60006040518083038185875af1925050503d8060008114610abc576040519150601f19603f3d011682016040523d82523d6000602084013e610ac1565b606091505b5091509150610ad1868383610adb565b9695505050505050565b606082610af057610aeb82610b50565b61057e565b8151158015610b0757506001600160a01b0384163b155b15610b49576040517f9996b3150000000000000000000000000000000000000000000000000000000081526001600160a01b0385166004820152602401610672565b508061057e565b805115610b605780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600160a01b038116811461067b57600080fd5b8035610bb281610b92565b919050565b600060208284031215610bc957600080fd5b813561057e81610b92565b60008060408385031215610be757600080fd5b8235610bf281610b92565b91506020830135610c0281610b92565b809150509250929050565b600060208284031215610c1f57600080fd5b5035919050565b801515811461067b57600080fd5b634e487b7160e01b600052604160045260246000fd5b600082601f830112610c5b57600080fd5b8135602067ffffffffffffffff80831115610c7857610c78610c34565b8260051b6040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0603f83011681018181108482111715610cbb57610cbb610c34565b604052938452858101830193838101925087851115610cd957600080fd5b83870191505b84821015610cff57610cf082610ba7565b83529183019190830190610cdf565b979650505050505050565b60008060408385031215610d1d57600080fd5b8235610d2881610c26565b9150602083013567ffffffffffffffff811115610d4457600080fd5b610d5085828601610c4a565b9150509250929050565b600080600060608486031215610d6f57600080fd5b8335610d7a81610c26565b9250602084013567ffffffffffffffff811115610d9657600080fd5b610da286828701610c4a565b9250506040840135610db381610b92565b809150509250925092565b600060208284031215610dd057600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b8082018082111561044357610443610dd7565b634e487b7160e01b600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610e4757610e47610dd7565b5060010190565b808202811582820484141761044357610443610dd7565b600082610e8257634e487b7160e01b600052601260045260246000fd5b500490565b8181038181111561044357610443610dd7565b600060208284031215610eac57600080fd5b815161057e81610c26565b6000825160005b81811015610ed85760208186018101518583015201610ebe565b50600092019182525091905056fea26469706673582212209376b53217ef4f10642f134b6e7e9b55e331d4568ad236c9c791dc6754417e4f64736f6c63430008140033";

type SplitSenderConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SplitSenderConstructorParams,
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SplitSender__factory extends ContractFactory {
  constructor(...args: SplitSenderConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string },
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      SplitSender & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): SplitSender__factory {
    return super.connect(runner) as SplitSender__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SplitSenderInterface {
    return new Interface(_abi) as SplitSenderInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): SplitSender {
    return new Contract(address, _abi, runner) as unknown as SplitSender;
  }
}
